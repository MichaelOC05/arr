# Generated by Django 4.0.3 on 2022-08-23 19:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=20)),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_name', models.CharField(max_length=100)),
                ('base_rating', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('plot_rating', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('char_rating', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('setting_rating', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('add_on_rating', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('removal_rating', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)])),
                ('rubric_rating', models.FloatField()),
                ('admin_rating', models.FloatField()),
                ('rating_description', models.TextField(max_length=250)),
                ('reviewer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='review_model', to='monolith_rest.usermodel')),
            ],
        ),
        migrations.CreateModel(
            name='MovieInformationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movie_name', models.CharField(max_length=100)),
                ('movie_poster', models.URLField(null=True)),
                ('source_cover', models.URLField(null=True)),
                ('movie_director', models.CharField(max_length=100)),
                ('source_author', models.CharField(max_length=100)),
                ('imdb_score', models.FloatField()),
                ('movie_synopsis', models.TextField(max_length=250)),
                ('imdb_id', models.CharField(max_length=100)),
                ('source_type', models.CharField(max_length=100)),
                ('list_of_reviews', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='list_of_reviews', to='monolith_rest.reviewmodel')),
            ],
        ),
        migrations.CreateModel(
            name='CommentsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_posted', models.DateTimeField()),
                ('comment', models.TextField(max_length=250)),
                ('commenter_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments_model', to='monolith_rest.usermodel')),
            ],
        ),
    ]
