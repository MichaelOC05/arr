stages:
  - test
  - build
  - deploy
services:
  - postgres:14.2-bullseye
variables:
  POSTGRES_PASSWORD: test
  DATABASE_URL: postgresql://postgres:test@postgres:5432/postgres
  MOVIE_KEY: ${MOVIE_KEY}
  COMIC_VINE_API_KEY: ${COMIC_VINE_API_KEY}
  DJWTO_SIGNING_KEY: ${DJWTO_SIGNING_KEY}
unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd monolith
    - pip install -r requirements.txt
    - python manage.py test
lint-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 monolith
build-front-end-job:
  stage: build
  image: node:lts-bullseye
  script:
    - cd ghi
    - npm install 
    - npm run build


build-adaptation-accuracy-report-back-end:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd monolith
    - docker build -t ${CI_REGISTRY_IMAGE}/monolith:latest .
    - docker tag ${CI_REGISTRY_IMAGE}/monolith:latest ${CI_REGISTRY_IMAGE}/monolith:$CI_JOB_ID
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}/monolith:$CI_JOB_ID
    - docker push ${CI_REGISTRY_IMAGE}/monolith:latest


deploy-adaptation-accuracy-report:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: deploy
  image: docker:20.10.16
  needs:
    - build-adaptation-accuracy-report-back-end
  services:
    - docker:20.10.16-dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull ${CI_REGISTRY_IMAGE}/monolith:latest
    - docker tag ${CI_REGISTRY_IMAGE}/monolith:latest registry.heroku.com/$HEROKU_ACCOUNT_API_APP/web:latest
    - docker push registry.heroku.com/$HEROKU_ACCOUNT_API_APP/web:latest


release-adaptation-accuracy-report:
  stage: deploy
  image: node:10.17-alpine
  needs:
    - deploy-adaptation-accuracy-report
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release web --app $HEROKU_ACCOUNT_API_APP


build-adaptation-accuracy-report-front-end:
  stage: build
  image: node:lts-bullseye
  variables:
    PUBLIC_URL: https://GioM1598.gitlab.io/brogrammers
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

      
pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-adaptation-accuracy-report-front-end
  needs:
    - build-adaptation-accuracy-report-front-end
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public

